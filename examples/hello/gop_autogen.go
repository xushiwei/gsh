// Code generated by gop (Go+); DO NOT EDIT.

package main

import (
	"fmt"
	"github.com/qiniu/x/errors"
	"github.com/xushiwei/gsh"
	"strconv"
	"strings"
)

const _ = true

type file struct {
	name  string
	fsize int
}
type hello struct {
	gsh.App
}
//line examples/hello/hello.gsh:6
func (this *hello) MainEntry() {
//line examples/hello/hello.gsh:6:1
	func() {
//line examples/hello/hello.gsh:6:1
		var _gop_err error
//line examples/hello/hello.gsh:6:1
		_gop_err = this.Gop_Exec("mkdir", "testgsh")
//line examples/hello/hello.gsh:6:1
		if _gop_err != nil {
//line examples/hello/hello.gsh:6:1
			_gop_err = errors.NewFrame(_gop_err, "mkdir \"testgsh\"", "examples/hello/hello.gsh", 6, "main.MainEntry")
//line examples/hello/hello.gsh:6:1
			panic(_gop_err)
		}
//line examples/hello/hello.gsh:6:1
		return
	}()
//line examples/hello/hello.gsh:8:1
	this.Gop_Exec("mkdir", "testgsh2")
//line examples/hello/hello.gsh:9:1
	func() {
//line examples/hello/hello.gsh:9:1
		var _gop_err error
//line examples/hello/hello.gsh:9:1
		_gop_err = this.LastErr()
//line examples/hello/hello.gsh:9:1
		if _gop_err != nil {
//line examples/hello/hello.gsh:9:1
			_gop_err = errors.NewFrame(_gop_err, "lastErr", "examples/hello/hello.gsh", 9, "main.MainEntry")
//line examples/hello/hello.gsh:9:1
			panic(_gop_err)
		}
//line examples/hello/hello.gsh:9:1
		return
	}()
//line examples/hello/hello.gsh:11:1
	this.Gop_Exec("mkdir", "testgsh3")
//line examples/hello/hello.gsh:12:1
	if this.LastErr() != nil {
//line examples/hello/hello.gsh:13:1
		panic(this.LastErr())
	}
//line examples/hello/hello.gsh:16:1
	this.Capout(func() {
//line examples/hello/hello.gsh:16:1
		this.Gop_Exec("ls")
	})
//line examples/hello/hello.gsh:17:1
	fmt.Println(strings.Fields(this.Output()))
//line examples/hello/hello.gsh:19:1
	this.Capout(func() {
//line examples/hello/hello.gsh:19:1
		this.Gop_Exec("ls", "-l")
	})
//line examples/hello/hello.gsh:20:1
	files := func() (_gop_ret []file) {
		for
//line examples/hello/hello.gsh:20:1
		_, e := range strings.Split(this.Output(), "\n") {
//line examples/hello/hello.gsh:20:1
			if
//line examples/hello/hello.gsh:20:1
			flds := strings.Fields(e); len(flds) > 2 {
//line examples/hello/hello.gsh:20:1
				_gop_ret = append(_gop_ret, file{flds[8], func() (_gop_ret int) {
//line examples/hello/hello.gsh:20:1
					var _gop_err error
//line examples/hello/hello.gsh:20:1
					_gop_ret, _gop_err = strconv.Atoi(flds[4])
//line examples/hello/hello.gsh:20:1
					if _gop_err != nil {
//line examples/hello/hello.gsh:20:1
						_gop_err = errors.NewFrame(_gop_err, "flds[4].int", "examples/hello/hello.gsh", 20, "main.MainEntry")
//line examples/hello/hello.gsh:20:1
						panic(_gop_err)
					}
//line examples/hello/hello.gsh:20:1
					return
				}()})
			}
		}
//line examples/hello/hello.gsh:20:1
		return
	}()
//line examples/hello/hello.gsh:21:1
	fmt.Println(files)
//line examples/hello/hello.gsh:23:1
	this.Gop_Exec("rmdir", "testgsh", "testgsh2", "testgsh3")
}
func main() {
	gsh.Gopt_App_Main(new(hello))
}
